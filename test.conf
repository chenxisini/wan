[General]
bypass-system = true
doh-server = https://dns.alidns.com/dns-query,https://doh.pub/dns-query
skip-proxy = 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, localhost, *.local, captive.apple.com
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.18.0.0/15, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32
dns-server = system
ipv6 = false
update-url = https://raw.githubusercontent.com/chenxisini/wan/master/test.conf
[Proxy Group]
##配置策略组 位置代理分组
##手动选择-select
🚀 策略选择 = select,延迟最低,🇨🇳 台湾节点,🇬🇧 英国节点,🇯🇵 日本节点,🇭🇰 香港节点,🇸🇬 新加坡节点,🇺🇸 美国节点,🇰🇷 韩国节点,🇷🇺 俄罗斯节点,🇮🇳 印度,interval=600,timeout=5,select=0,url=http://www.gstatic.com/generate_204
##默认设置1小时 自动测试 并选择最低节点 ，容差延迟20ms，检测超时10s，正则匹配.*所有节点
延迟最低 = url-test,url=http://www.gstatic.com/generate_204,interval=3600,tolerance=20,timeout=10,policy-regex-filter=.*
OpenAI = select,🇺🇸 美国节点,🇬🇧 英国节点,🇮🇳 印度, select=0
📲 Telegram = select,🚀 策略选择,🇭🇰 香港节点,🇺🇸 美国节点,🇸🇬 新加坡节点,🇯🇵 日本节点,🇨🇳 台湾节点,🇬🇧 英国节点,🇰🇷 韩国节点, select=0
📹 YouTube = select,🚀 策略选择,🇭🇰 香港节点,🇺🇸 美国节点,🇸🇬 新加坡节点,🇯🇵 日本节点,🇨🇳 台湾节点,🇬🇧 英国节点, 🇰🇷 韩国节点,select=0
🎻 Spotify = select,🚀 策略选择,🇭🇰 香港节点,🇺🇸 美国节点,🇸🇬 新加坡节点,🇯🇵 日本节点,🇨🇳 台湾节点,🇬🇧 英国节点,🇰🇷 韩国节点, select=0
📄 Twitter = select,🚀 策略选择,🇭🇰 香港节点,🇺🇸 美国节点,🇸🇬 新加坡节点,🇯🇵 日本节点,🇨🇳 台湾节点,🇬🇧 英国节点,🇰🇷 韩国节点, select=0
🍿 国际媒体 = select,🚀 策略选择,🇭🇰 香港节点,🇺🇸 美国节点,🇸🇬 新加坡节点,🇯🇵 日本节点,🇨🇳 台湾节点,🇬🇧 英国节点,🇰🇷 韩国节点, select=0
📽 哔哩哔哩 = select, 🌐 全球直连, 🇭🇰 香港节点, 🇨🇳 台湾节点, select=0
🍔 国内媒体 = select, 🌐 全球直连, 🇭🇰 香港节点, 🇺🇸 美国节点, 🇸🇬 新加坡节点, 🇯🇵 日本节点, 🇨🇳 台湾节点, 🇬🇧 英国节点, select=0
Ⓜ️ 微软服务 = select, 🌐 全球直连, 🚀 策略选择, 🇭🇰 香港节点, 🇺🇸 美国节点, 🇸🇬 新加坡节点, 🇯🇵 日本节点, 🇨🇳 台湾节点, 🇬🇧 英国节点,🇰🇷 韩国节点, select=0
🍎 苹果服务 = select, 🌐 全球直连, 🚀 策略选择, 🇭🇰 香港节点, 🇺🇸 美国节点, 🇸🇬 新加坡节点, 🇯🇵 日本节点, 🇨🇳 台湾节点, 🇬🇧 英国节点,🇰🇷 韩国节点, select=0
##节点筛选
🇭🇰 香港节点 = url-test,url=http://www.gstatic.com/generate_204,interval=3600,tolerance=10,timeout=5,policy-regex-filter=(?=.*(港|HK|(?i)Hong))^((?!(台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|TW|台灣|美國|韓國|獅城)).)*$
🇨🇳 台湾节点 = url-test,url=http://www.gstatic.com/generate_204,interval=3600,tolerance=10,timeout=5,policy-regex-filter=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$
🇺🇸 美国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=3600,tolerance=10,timeout=5,policy-regex-filter=(?=.*(美国|美國|US|洛杉矶|西雅图|(?i)States|American))^((?!(香港|台湾|日本|新加坡|韩国|狮城|南朝鲜|SG|JP|KR|HK|TW|台灣|韓國|獅城)).)*$
🇰🇷 韩国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=3600,tolerance=10,timeout=5,policy-regex-filter=(?=.*(KR|Korea|KOR|首尔|韩|韓|(?i)Korea))^((?!(香港|台湾|新加坡|美国|狮城|南朝鲜|US|SG|HK|TW|台灣|美國|獅城)).)*$
🇷🇺 俄罗斯节点 = url-test,url=http://www.gstatic.com/generate_204,interval=3600,tolerance=10,timeout=5,policy-regex-filter=🇷🇺|俄罗斯|RU|莫斯科|圣彼得堡|喀山|哈尔科夫|乌法|新西伯利亚|下诺夫哥罗德|沃罗涅什
🇬🇧 英国节点 = url-test,url=http://www.gstatic.com/generate_204,interval=3600,tolerance=10,timeout=5,policy-regex-filter=🇬🇧|英国|UK|伦敦|英格兰|伯明翰|泰恩河畔纽卡斯尔|利兹|爱丁堡|格拉斯哥|苏格兰
🇯🇵 日本节点 = url-test,url=http://www.gstatic.com/generate_204,interval=3600,tolerance=10,timeout=5,policy-regex-filter=(?=.*(日本|JP|(?i)Japan))^((?!(香港|台湾|新加坡|美国|韩国|狮城|南朝鲜|US|SG|KR|HK|TW|台灣|美國|韓國|獅城)).)*$
🇸🇬 新加坡节点 = url-test,url=http://www.gstatic.com/generate_204,interval=3600,tolerance=10,timeout=5,policy-regex-filter=(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(香港|台湾|日本|美国|韩国|南朝鲜|US|JP|KR|HK|TW|台灣|美國|韓國)).)*$
🇮🇳 印度 = url-test,url=http://www.gstatic.com/generate_204,interval=3600,tolerance=10,timeout=5,policy-regex-filter=🇮🇳|印度|IN|IND|孟买|新德里|高知|Republic of India|India
网易云音乐节点 = url-test,,url=http://www.gstatic.com/generate_204,interval=3600,tolerance=00,timeout=5,policy-regex-filter=(?=.*(music|𝐌𝐮𝐬𝐢𝐜|Unbolck|网易云|云音乐|Music|Netease|🎶|流媒体解锁))


##兜底策略
🌐 全球直连 = select, DIRECT



[Rule]
#网易云音乐解锁
RULE-SET,https://github.com/ddgksf2013/Filter/raw/master/NeteaseMusic.list,网易云音乐节点
#openai
RULE-SET,https://yfamily.vercel.app/rule/ai.list,OpenAI
#微信
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/WeChat/WeChat.list,🌐 全球直连
#bilibili
RULE-SET,https://raw.githubusercontent.com/ddgksf2013/Filter/master/StreamingSE.list,🍔 国内媒体
#国际媒体
RULE-SET,https://raw.githubusercontent.com/ddgksf2013/Filter/master/Streaming.list,🍿 国际媒体
# Advert 广告屏蔽
#DOMAIN-SET,https://anti-ad.net/surge2.txt,REJECT
# Global 全球加速
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list,🍿 国际媒体 
# China  国内直连
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/China/China.list,🌐 全球直连
# China  国内直连
GEOIP,CN,🌐 全球直连
# Final  兜底分流
FINAL,🚀 策略选择

[Host]
*testflight.apple.com = server:8.8.4.4
localhost = 127.0.0.1
*.alicdn.com = server:223.5.5.5
aliyun.com = server:223.5.5.5
*.aliyun.com = server:223.5.5.5
*.qq.com = server:119.28.28.28
*.tencent.com = server:119.28.28.28
*.weixin.com = server:119.28.28.28
*.bilibili.com = server:119.29.29.29
hdslb.com = server:119.29.29.29
*.163.com = server:119.29.29.29
*.126.com = server:119.29.29.29
*.126.net = server:119.29.29.29
*.127.net = server:119.29.29.29
*.mi.com = server:119.29.29.29
*.xiaomi.com = server:119.29.29.29
dl.google.com = server:119.29.29.29
dl.l.google.com = server:119.29.29.29

[URL Rewrite]
#
^https?://(www.)?g.cn https://www.google.com 302
^https?://(www.)?google.cn https://www.google.com 302

# ======= 视频广告请求 ======= #
(^https?:\/\/[\w-]+\.googlevideo\.com\/(?!dclk_video_ads).+?)&ctier=L(&.+?),ctier,(.+) $1$2$3 302
^https?:\/\/[\w-]+\.googlevideo\.com\/(?!(dclk_video_ads|videoplayback\?)).+&oad - reject
# ======= 通用广告请求 ======= #
^https?:\/\/(www|s)\.youtube\.com\/api\/stats\/ads - reject
^https?:\/\/(www|s)\.youtube\.com\/(pagead|ptracking) - reject
^https?:\/\/s\.youtube\.com\/api\/stats\/qoe\?adcontext - reject
#-------------------------------------------------------------------------------


#彩云天气pro
^https:\/\/ad\.caiyunapp\.com\/ _ reject


#波点音乐去广告
^http:\/\/bd-api\.kuwo\.cn\/api\/service\/resource\/musicResource\/.+ _ reject

^https:\/\/bodiancdn\.kuwo\.cn\/.+\.mp4 _ reject

^http:\/\/bd-api\.kuwo\.cn\/api\/service\/resource\/view\?uid _ reject

^http:\/\/bd-api\.kuwo\.cn\/api\/service\/music\/recommendList\?uid _ reject




[Script]
# ======= 视频PIP|后台播放|瀑布流|搜索页|播放页|短视频|贴片广告  ======= #
youtube.response = type=http-response,pattern=^https:\/\/youtubei\.googleapis\.com\/youtubei\/v1\/(browse|next|player|search|reel\/reel_watch_sequence|guide|account\/get_setting)\?,requires-body=1,binary-mode=1,script-path=https://raw.githubusercontent.com/Maasea/sgmodule/master/Script/Youtube/dist/youtube.response.beta.js
youtube.request = type=http-request,pattern=^https:\/\/youtubei\.googleapis\.com\/youtubei\/v1\/(browse|next|player|reel\/reel_watch_sequence)\?,requires-body=1,binary-mode=1,script-path=https://raw.githubusercontent.com/Maasea/sgmodule/master/Script/Youtube/dist/youtube.request.beta.js


##自用脚本区域
# ——————————————————————————分割线——————————————————————————————————————————
#彩云天气pro

彩云天气pro=type=http-response,pattern=^http[s]?:\/\/biz\.(caiyunapp|cyapi)\.(com|cn)\/v2\/user.*$,requires-body=1,script-path=https://raw.githubusercontent.com/WeiRen0/Scripts/main/cytq.js

#Bili1080P
Bili1080P=type=http-response,pattern=^https?:\/\/app\.bilibili\.com\/x\/v2\/account\/myinfo\?,requires-body=1,script-path=https://raw.githubusercontent.com/deezertidal/private/master/js-backup/Script/bilibili_json.js

#spotify解锁
spotify-json = type=http-request,type=http-request,pattern=^https:\/\/spclient\.wg\.spotify\.com\/(artistview\/v1\/artist|album-entity-view\/v2\/album)\/,requires-body=0,script-path=https://raw.githubusercontent.com/app2smile/rules/master/js/spotify-json.js
spotify-proto = type=http-response,pattern=^https:\/\/spclient\.wg\.spotify\.com\/(bootstrap\/v1\/bootstrap|user-customization-service\/v1\/customize)$,requires-body=1,binary-mode=1,max-size=0,script-path=https://raw.githubusercontent.com/app2smile/rules/master/js/spotify-proto.js,script-update-interval=0

[MITM]
hostname= %APPEND% *.caiyunapp.com,*.cyapi.com,*.cyapi.cn ,*.caiyunapp.cn,app.bilibili.com,spclient.wg.spotify.com

ca-passphrase = Shadowrocket
enable = true
